type @converter
impl @converter {
	new: (source: @string) {
		let file = @file::new(source)
		let data = file.read()
		characters = data.split('\n')
		let parsed_characters = []
		let parsed_dec = []
		let parsed_hex = []
		let parsed_bin = []
		for character in characters {
			let parts = character.split('	')
			parsed_dec.push(parts[0])
			parsed_hex.push(parts[2])
			parsed_bin.push(parts[3])
			parsed_characters.push(parts[4])
		}
		return @converter::{
			parsed_characters,
			parsed_dec,
			parsed_bin,
			parsed_hex	
		}
	},
	binary: (self, text: @string) {
		index = self.parsed_characters.index(text)
		return self.parsed_bin[index]
	},
	decimal: (self, text: @string) {
		index = self.parsed_characters.index(text)
		return self.parsed_dec[index]
	},
	hexadecimal: (self, text: @string) {
		index = self.parsed_characters.index(text)
		return self.parsed_hex[index]
	}
}
